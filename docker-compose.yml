# filepath: c:\Users\Pramod Tiwari\Downloads\discord-bot\docker-compose.yml
version: '3.8'

services:
  # PostgreSQL database with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: archivemind-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-archivemind}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-archivemind}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - archivemind-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-archivemind}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Archivemind Discord Bot
  archivemind:
    build: .
    container_name: archivemind-bot
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-archivemind}:${POSTGRES_PASSWORD:-secure_password}@postgres:5432/${POSTGRES_DB:-archivemind}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      KNOWLEDGE_BASE_CHANNEL_ID: ${KNOWLEDGE_BASE_CHANNEL_ID}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DEFAULT_INACTIVITY_DAYS: ${DEFAULT_INACTIVITY_DAYS:-30}
      GRACE_PERIOD_DAYS: ${GRACE_PERIOD_DAYS:-7}
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    networks:
      - archivemind-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Bot health check')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: archivemind-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - archivemind-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: archivemind-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - archivemind-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: archivemind-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - archivemind-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  archivemind-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local